{
  "$schema": "",
  "type": "object",
  "definitions": {
    "order1_group": {
      "$schema": "",
      "title": "Group",
      "description": "Group API",
      "strictProperties": true,
      "type": "object",
      "definitions": {
        "id": {
          "description": "Unique group identifier",
          "readOnly": true,
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "description": "Group name",
          "example": "group1",
          "type": "string"
        },
        "path": {
          "description": "Group location",
          "example": "/example/admin/",
          "type": "string"
        },
        "createdAt": {
          "description": "Group creation date",
          "format": "date-time",
          "type": "string"
        },
        "updateAt": {
          "description": "The date timestamp of the last update",
          "format": "date-time",
          "type": "string"
        },
        "urn": {
          "description": "Group's Uniform Resource Name",
          "example": "urn:iws:iam:tecsisa:group/example/admin/group1",
          "type": "string"
        },
        "org": {
          "description": "Group organization",
          "example": "tecsisa",
          "type": "string"
        }
      },
      "links": [
        {
          "description": "Create a new group",
          "href": "/api/v1/organizations/{organization_id}/groups",
          "method": "POST",
          "rel": "create",
          "http_header": {
            "Authorization": "Basic or Bearer XXX"
          },
          "schema": {
            "properties": {
              "name": {
                "$ref": "#/definitions/order1_group/definitions/name"
              },
              "path": {
                "$ref": "#/definitions/order1_group/definitions/path"
              }
            },
            "required": [
              "name",
              "path"
            ],
            "type": "object"
          },
          "title": "Create"
        },
        {
          "description": "Update an existing group",
          "href": "/api/v1/organizations/{organization_id}/groups/{group_name}",
          "method": "PUT",
          "rel": "update",
          "http_header": {
            "Authorization": "Basic or Bearer XXX"
          },
          "schema": {
            "properties": {
              "name": {
                "$ref": "#/definitions/order1_group/definitions/name"
              },
              "path": {
                "$ref": "#/definitions/order1_group/definitions/path"
              }
            },
            "required": [
              "name",
              "path"
            ],
            "type": "object"
          },
          "title": "Update"
        },
        {
          "description": "Delete an existing group",
          "href": "/api/v1/organizations/{organization_id}/groups/{group_name}",
          "method": "DELETE",
          "rel": "empty",
          "http_header": {
            "Authorization": "Basic or Bearer XXX"
          },
          "title": "Delete"
        },
        {
          "description": "Get an existing group",
          "href": "/api/v1/organizations/{organization_id}/groups/{group_name}",
          "method": "GET",
          "rel": "self",
          "http_header": {
            "Authorization": "Basic or Bearer XXX"
          },
          "title": "Get"
        }
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/order1_group/definitions/id"
        },
        "name": {
          "$ref": "#/definitions/order1_group/definitions/name"
        },
        "path": {
          "$ref": "#/definitions/order1_group/definitions/path"
        },
        "createdAt": {
          "$ref": "#/definitions/order1_group/definitions/createdAt"
        },
        "updateAt": {
          "$ref": "#/definitions/order1_group/definitions/updateAt"
        },
        "urn": {
          "$ref": "#/definitions/order1_group/definitions/urn"
        },
        "org": {
          "$ref": "#/definitions/order1_group/definitions/org"
        }
      }
    },
    "order2_groupReference": {
      "$schema": "",
      "title": "Organization's groups",
      "description": "",
      "strictProperties": true,
      "type": "object",
      "links": [
        {
          "description": "List all organization's groups",
          "href": "/api/v1/organizations/{organization_id}/groups?PathPrefix={optional_path_prefix}&Offset={optional_offset}&Limit={optional_limit}&OrderBy={columnName-desc}",
          "method": "GET",
          "rel": "self",
          "http_header": {
            "Authorization": "Basic or Bearer XXX"
          },
          "title": "List"
        }
      ],
      "properties": {
        "groups": {
          "description": "List of groups",
          "example": ["groupName1, groupName2"],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "offset": {
          "description": "The offset of the items returned (as set in the query or by default)",
          "example": 0,
          "type": "integer"
        },
        "limit": {
          "description": "The maximum number of items in the response (as set in the query or by default)",
          "example": 20,
          "type": "integer"
        },
        "total": {
          "description": "The total number of items available to return",
          "example": 50,
          "type": "integer"
        }
      }
    },
    "order3_groupAllReference": {
      "$schema": "",
      "title": "All groups",
      "description": "",
      "strictProperties": true,
      "type": "object",
      "links": [
        {
          "description": "List all groups",
          "href": "/api/v1/groups?PathPrefix={optional_path_prefix}&Offset={optional_offset}&Limit={optional_limit}&OrderBy={columnName-desc}",
          "method": "GET",
          "rel": "self",
          "http_header": {
            "Authorization": "Basic or Bearer XXX"
          },
          "title": "List"
        }
      ],
      "properties": {
        "groups": {
          "description": "List of groups",
          "type": "array",
          "items": {
            "properties": {
              "org": {
                "$ref": "#/definitions/order1_group/definitions/org"
              },
              "name": {
                "$ref": "#/definitions/order1_group/definitions/name"
              }
            }
          }
        },
        "offset": {
          "description": "The offset of the items returned (as set in the query or by default)",
          "example": 0,
          "type": "integer"
        },
        "limit": {
          "description": "The maximum number of items in the response (as set in the query or by default)",
          "example": 20,
          "type": "integer"
        },
        "total": {
          "description": "The total number of items available to return",
          "example": 50,
          "type": "integer"
        }
      }
    },
    "order4_members": {
      "$schema": "",
      "title": "Member",
      "description": "Group members",
      "strictProperties": true,
      "type": "object",
      "links": [
        {
          "description": "Add member to a group.",
          "href": "/api/v1/organizations/{organization_id}/groups/{group_name}/users/{user_id}",
          "method": "POST",
          "rel": "empty",
          "http_header": {
            "Authorization": "Basic or Bearer XXX"
          },
          "title": "Add"
        },
        {
          "description": "Remove member from a group",
          "href": "/api/v1/organizations/{organization_id}/groups/{group_name}/users/{user_id}",
          "method": "DELETE",
          "rel": "empty",
          "http_header": {
            "Authorization": "Basic or Bearer XXX"
          },
          "title": "Remove"
        },
        {
          "description": "List members of a group",
          "href": "/api/v1/organizations/{organization_id}/groups/{group_name}/users?Offset={optional_offset}&Limit={optional_limit}&OrderBy={columnName-desc}",
          "method": "GET",
          "rel": "self",
          "http_header": {
            "Authorization": "Basic or Bearer XXX"
          },
          "title": "List"
        }
      ],
      "properties": {
        "members": {
          "description": "Identifier of member",
          "type": "array",
          "items": {
            "properties": {
              "user": {
                "description": "External ID",
                "example": "member1",
                "type": "string"
              },
              "joined": {
                "description": "When relationship was created",
                "format": "date-time",
                "type": "string"
              }
            }
          }
        },
        "offset": {
          "description": "The offset of the items returned (as set in the query or by default)",
          "example": 0,
          "type": "integer"
        },
        "limit": {
          "description": "The maximum number of items in the response (as set in the query or by default)",
          "example": 20,
          "type": "integer"
        },
        "total": {
          "description": "The total number of items available to return",
          "example": 50,
          "type": "integer"
        }
      }
    },
    "order5_attachedPolicies": {
      "$schema": "",
      "title": "Group Policies",
      "description": "Attached Policies",
      "strictProperties": true,
      "type": "object",
      "links": [
        {
          "description": "Attach policy to group",
          "href": "/api/v1/organizations/{organization_id}/groups/{group_name}/policies/{policy_id}",
          "method": "POST",
          "rel": "empty",
          "http_header": {
            "Authorization": "Basic or Bearer XXX"
          },
          "title": "Attach"
        },
        {
          "description": "Detach policy from group",
          "href": "/api/v1/organizations/{organization_id}/groups/{group_name}/policies/{policy_id}",
          "method": "DELETE",
          "rel": "empty",
          "http_header": {
            "Authorization": "Basic or Bearer XXX"
          },
          "title": "Detach"
        },
        {
          "description": "List attach policies",
          "href": "/api/v1/organizations/{organization_id}/groups/{group_name}/policies?Offset={optional_offset}&Limit={optional_limit}&OrderBy={columnName-desc}",
          "method": "GET",
          "rel": "self",
          "http_header": {
            "Authorization": "Basic or Bearer XXX"
          },
          "title": "List"
        }
      ],
      "properties": {
        "policies": {
          "description": "Policies attached to this group",
          "type": "array",
          "items": {
            "properties": {
              "policy": {
                "description": "Policy name",
                "example": "policyName1",
                "type": "string"
              },
              "attached": {
                "description": "When relationship was created",
                "format": "date-time",
                "type": "string"
              }
            }
          }
        },
        "offset": {
          "description": "The offset of the items returned (as set in the query or by default)",
          "example": 0,
          "type": "integer"
        },
        "limit": {
          "description": "The maximum number of items in the response (as set in the query or by default)",
          "example": 20,
          "type": "integer"
        },
        "total": {
          "description": "The total number of items available to return",
          "example": 50,
          "type": "integer"
        }
      }
    }
  },
  "properties": {
    "order1_group": {
      "$ref": "#/definitions/order1_group"
    },
    "order2_groupReference": {
      "$ref": "#/definitions/order2_groupReference"
    },
    "order3_groupAllReference": {
      "$ref": "#/definitions/order3_groupAllReference"
    },
    "order4_members": {
      "$ref": "#/definitions/order4_members"
    },
    "order5_attachedPolicies": {
      "$ref": "#/definitions/order5_attachedPolicies"
    }
  }
}