{
  "$schema": "",
  "type": "object",
  "definitions": {
    "order1_user": {
      "$schema": "",
      "title": "User",
      "description": "User API",
      "strictProperties": true,
      "type": "object",
      "definitions": {
        "id": {
          "description": "Unique user identifier",
          "readOnly": true,
          "format": "uuid",
          "type": [
            "string"
          ]
        },
        "externalId": {
          "description": "User's external identifier",
          "example": "user1",
          "type": "string"
        },
        "path": {
          "description": "User location",
          "example": "/example/admin/",
          "type": "string"
        },
        "createdAt": {
          "description": "User creation date",
          "format": "date-time",
          "type": "string"
        },
        "urn": {
          "description": "User's Uniform Resource Name",
          "example": "urn:iws:iam::user/example/admin/user1",
          "type": "string"
        }
      },
      "links": [
        {
          "description": "Create a new user.",
          "href": "/api/v1/users",
          "method": "POST",
          "rel": "create",
          "http_header": {
            "Authorization": "Basic or Bearer XXX"
          },
          "schema": {
            "properties": {
              "externalId": {
                "$ref": "#/definitions/order1_user/definitions/externalId"
              },
              "path": {
                "$ref": "#/definitions/order1_user/definitions/path"
              }
            },
            "required": [
              "externalId",
              "path"
            ],
            "type": "object"
          },
          "title": "Create"
        },
        {
          "description": "Update an existing user.",
          "href": "/api/v1/users/{user_externalID}",
          "method": "PUT",
          "rel": "update",
          "http_header": {
            "Authorization": "Basic or Bearer XXX"
          },
          "schema": {
            "properties": {
              "path": {
                "$ref": "#/definitions/order1_user/definitions/path"
              }
            },
            "required": [
              "path"
            ],
            "type": "object"
          },
          "title": "Update"
        },
        {
          "description": "Delete an existing user.",
          "href": "/api/v1/users/{user_externalID}",
          "method": "DELETE",
          "rel": "empty",
          "http_header": {
            "Authorization": "Basic or Bearer XXX"
          },
          "title": "Delete"
        },
        {
          "description": "Get an existing user.",
          "href": "/api/v1/users/{user_externalID}",
          "method": "GET",
          "rel": "self",
          "http_header": {
            "Authorization": "Basic or Bearer XXX"
          },
          "title": "Get"
        }
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/order1_user/definitions/id"
        },
        "externalId": {
          "$ref": "#/definitions/order1_user/definitions/externalId"
        },
        "path": {
          "$ref": "#/definitions/order1_user/definitions/path"
        },
        "createdAt": {
          "$ref": "#/definitions/order1_user/definitions/createdAt"
        },
        "urn": {
          "$ref": "#/definitions/order1_user/definitions/urn"
        }
      }
    },
    "order2_userReference": {
      "$schema": "",
      "title": "",
      "description": "",
      "strictProperties": true,
      "type": "object",
      "links": [
        {
          "description": "List all users filtered, using optional query parameters.",
          "href": "/api/v1/users?PathPrefix={optional_path_prefix}&Offset={optional_offset}&Limit={optional_limit}&OrderBy={columnName-desc}",
          "method": "GET",
          "rel": "self",
          "http_header": {
            "Authorization": "Basic or Bearer XXX"
          },
          "title": "User List All"
        }
      ],
      "properties": {
        "users": {
          "description": "User identifiers",
          "example": ["User1", "User2"],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "offset": {
          "description": "The offset of the items returned (as set in the query or by default)",
          "example": 0,
          "type": "integer"
        },
        "limit": {
          "description": "The maximum number of items in the response (as set in the query or by default)",
          "example": 20,
          "type": "integer"
        },
        "total": {
          "description": "The total number of items available to return",
          "example": 50,
          "type": "integer"
        }
      }
    },
    "order3_groupIdentity": {
      "$schema": "",
      "title": "",
      "description": "",
      "strictProperties": true,
      "type": "object",
      "links": [
        {
          "description": "List all groups that a user is a member.",
          "href": "/api/v1/users/{user_externalId}/groups?Offset={optional_offset}&Limit={optional_limit}&OrderBy={columnName-asc}",
          "method": "GET",
          "rel": "self",
          "http_header": {
            "Authorization": "Basic or Bearer XXX"
          },
          "title": "List user groups"
        }
      ],
      "properties": {
        "groups": {
          "description": "List of groups",
          "type": "array",
          "items": {
            "properties": {
              "org": {
                "description": "Group organization",
                "example": "tecsisa",
                "type": "string"
              },
              "name": {
                "description": "Group name",
                "example": "group1",
                "type": "string"
              },
              "joined": {
                "description": "When relationship was created",
                "format": "date-time",
                "type": "string"
              }
            }
          }
        },
        "offset": {
          "description": "The offset of the items returned (as set in the query or by default)",
          "example": 0,
          "type": "integer"
        },
        "limit": {
          "description": "The maximum number of items in the response (as set in the query or by default)",
          "example": 20,
          "type": "integer"
        },
        "total": {
          "description": "The total number of items available to return",
          "example": 50,
          "type": "integer"
        }
      }
    }
  },
  "properties": {
    "order1_user": {
      "$ref": "#/definitions/order1_user"
    },
    "order2_userReference": {
      "$ref": "#/definitions/order2_userReference"
    },
    "order3_groupIdentity": {
      "$ref": "#/definitions/order3_groupIdentity"
    }
  }
}
